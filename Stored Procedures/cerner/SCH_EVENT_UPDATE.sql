USE [ENTERPRISE]
GO
/****** Object:  StoredProcedure [cerner].[SCH_EVENT_UPDATE]    Script Date: 11/29/2021 5:24:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [cerner].[SCH_EVENT_UPDATE] AS

BEGIN
	create table #sch_event_update (
		SCH_EVENT_ID INT
		,APPT_TYPE_CD INT
		,APPT_SYNONYM_CD INT
		,OE_FORMAT_ID INT
		,ORDER_SENTENCE_ID INT
		,SCHEDULE_SEQ INT
		,SCH_STATE_CD INT
		,SCH_MEANING VARCHAR(12)
		,CONTRIBUTOR_SYSTEM_CD INT
		,APPT_SYNONYM_FREE VARCHAR(255)
		,APPT_REASON_FREE VARCHAR(255)
		,REQ_PRSNL_ID INT
		,CANDIDATE_ID INT
		,ACTIVE_IND INT
		,ACTIVE_STATUS_CD INT
		,ACTIVE_STATUS_PRSNL_ID INT
		,UPDT_DT_TM DATETIME2
		,UPDT_APPLCTX INT
		,UPDT_ID INT
		,UPDT_CNT INT
		,UPDT_TASK INT
		,RECUR_TYPE_FLAG INT
		,RECUR_PARENT_ID INT
		,RECUR_TEMPLATE_ID INT
		,RECUR_SEQ_NBR INT
		,EVENT_RECUR_ID INT
		,PROTOCOL_TYPE_FLAG INT
		,ESO_SEND_IND INT
		,OFFSET_BEG_UNITS INT
		,OFFSET_BEG_UNITS_CD INT
		,OFFSET_BEG_UNITS_MEANING VARCHAR(12)
		,OFFSET_END_UNITS INT
		,OFFSET_END_UNITS_CD INT
		,OFFSET_END_UNITS_MEANING VARCHAR(12)
		,OFFSET_EVENT_ID INT
		,OFFSET_FROM_CD INT
		,OFFSET_FROM_MEANING VARCHAR(12)
		,OFFSET_TYPE_CD INT
		,OFFSET_TYPE_MEANING VARCHAR(12)
		,PROTOCOL_PARENT_ID INT
		,PROTOCOL_SEQ_NBR INT
		,GRP_DESC VARCHAR(255)
		,GRP_CAPACITY INT
		,GRP_NBR_SCHED INT
		,GRP_FLAG INT
		,GRP_SHARED_IND INT
		,GRP_CLOSED_IND INT
		,EVENT_CLASS_CD INT
		,SCH_EVENT_SEQ INT
		,ACTIVE_STATUS_DT_TM DATETIME2
		,BEG_EFFECTIVE_DT_TM DATETIME2
		,END_EFFECTIVE_DT_TM DATETIME2
		,GRP_BEG_DT_TM DATETIME2
		,GRP_END_DT_TM DATETIME2
		,NULL_DT_TM DATETIME2
		,REFER_DT_TM DATETIME2
		,VERSION_DT_TM DATETIME2
		,REFER_PRINTED_IND INT
		,ENTERPRISE_UPDATE_DT_TM DATETIME2
	)
	
	DECLARE @StartDate datetime2
	DECLARE @EndDate datetime2
	SET @StartDate = dateadd(day,-2,convert(date,getdate()))
	SET @EndDate = convert(date,getdate())

	INSERT INTO #sch_event_update
	EXEC('
	select
		SCH_EVENT_ID
		,APPT_TYPE_CD
		,APPT_SYNONYM_CD
		,OE_FORMAT_ID
		,ORDER_SENTENCE_ID
		,SCHEDULE_SEQ
		,SCH_STATE_CD
		,SCH_MEANING
		,CONTRIBUTOR_SYSTEM_CD
		,APPT_SYNONYM_FREE
		,APPT_REASON_FREE
		,REQ_PRSNL_ID
		,CANDIDATE_ID
		,ACTIVE_IND
		,ACTIVE_STATUS_CD
		,ACTIVE_STATUS_PRSNL_ID
		,UPDT_DT_TM
		,UPDT_APPLCTX
		,UPDT_ID
		,UPDT_CNT
		,UPDT_TASK
		,RECUR_TYPE_FLAG
		,RECUR_PARENT_ID
		,RECUR_TEMPLATE_ID
		,RECUR_SEQ_NBR
		,EVENT_RECUR_ID
		,PROTOCOL_TYPE_FLAG
		,ESO_SEND_IND
		,OFFSET_BEG_UNITS
		,OFFSET_BEG_UNITS_CD
		,OFFSET_BEG_UNITS_MEANING
		,OFFSET_END_UNITS
		,OFFSET_END_UNITS_CD
		,OFFSET_END_UNITS_MEANING
		,OFFSET_EVENT_ID
		,OFFSET_FROM_CD
		,OFFSET_FROM_MEANING
		,OFFSET_TYPE_CD
		,OFFSET_TYPE_MEANING
		,PROTOCOL_PARENT_ID
		,PROTOCOL_SEQ_NBR
		,GRP_DESC
		,GRP_CAPACITY
		,GRP_NBR_SCHED
		,GRP_FLAG
		,GRP_SHARED_IND
		,GRP_CLOSED_IND
		,EVENT_CLASS_CD
		,SCH_EVENT_SEQ
		,ACTIVE_STATUS_DT_TM
		,BEG_EFFECTIVE_DT_TM
		,END_EFFECTIVE_DT_TM
		,GRP_BEG_DT_TM
		,GRP_END_DT_TM
		,NULL_DT_TM
		,REFER_DT_TM
		,VERSION_DT_TM
		,REFER_PRINTED_IND
		,sysdate as ENTERPRISE_UPDATE_DT_TM
	from
		sch_event
	where
		(updt_dt_tm >= ? and updt_dt_tm < ?)
	', @StartDate, @EndDate) AT [CERNERPROD]
END

BEGIN
	CREATE TABLE #sch_event_update_filtered (
		SCH_EVENT_ID INT
		,APPT_TYPE_CD INT
		,APPT_SYNONYM_CD INT
		,OE_FORMAT_ID INT
		,ORDER_SENTENCE_ID INT
		,SCHEDULE_SEQ INT
		,SCH_STATE_CD INT
		,SCH_MEANING VARCHAR(12)
		,CONTRIBUTOR_SYSTEM_CD INT
		,APPT_SYNONYM_FREE VARCHAR(255)
		,APPT_REASON_FREE VARCHAR(255)
		,REQ_PRSNL_ID INT
		,CANDIDATE_ID INT
		,ACTIVE_IND INT
		,ACTIVE_STATUS_CD INT
		,ACTIVE_STATUS_PRSNL_ID INT
		,UPDT_DT_TM DATETIME2
		,UPDT_APPLCTX INT
		,UPDT_ID INT
		,UPDT_CNT INT
		,UPDT_TASK INT
		,RECUR_TYPE_FLAG INT
		,RECUR_PARENT_ID INT
		,RECUR_TEMPLATE_ID INT
		,RECUR_SEQ_NBR INT
		,EVENT_RECUR_ID INT
		,PROTOCOL_TYPE_FLAG INT
		,ESO_SEND_IND INT
		,OFFSET_BEG_UNITS INT
		,OFFSET_BEG_UNITS_CD INT
		,OFFSET_BEG_UNITS_MEANING VARCHAR(12)
		,OFFSET_END_UNITS INT
		,OFFSET_END_UNITS_CD INT
		,OFFSET_END_UNITS_MEANING VARCHAR(12)
		,OFFSET_EVENT_ID INT
		,OFFSET_FROM_CD INT
		,OFFSET_FROM_MEANING VARCHAR(12)
		,OFFSET_TYPE_CD INT
		,OFFSET_TYPE_MEANING VARCHAR(12)
		,PROTOCOL_PARENT_ID INT
		,PROTOCOL_SEQ_NBR INT
		,GRP_DESC VARCHAR(255)
		,GRP_CAPACITY INT
		,GRP_NBR_SCHED INT
		,GRP_FLAG INT
		,GRP_SHARED_IND INT
		,GRP_CLOSED_IND INT
		,EVENT_CLASS_CD INT
		,SCH_EVENT_SEQ INT
		,ACTIVE_STATUS_DT_TM DATETIME2
		,BEG_EFFECTIVE_DT_TM DATETIME2
		,END_EFFECTIVE_DT_TM DATETIME2
		,GRP_BEG_DT_TM DATETIME2
		,GRP_END_DT_TM DATETIME2
		,NULL_DT_TM DATETIME2
		,REFER_DT_TM DATETIME2
		,VERSION_DT_TM DATETIME2
		,REFER_PRINTED_IND INT
		,ENTERPRISE_UPDATE_DT_TM DATETIME2
	)

	INSERT INTO #sch_event_update_filtered
	select
		su.SCH_EVENT_ID
		,su.APPT_TYPE_CD
		,su.APPT_SYNONYM_CD
		,su.OE_FORMAT_ID
		,su.ORDER_SENTENCE_ID
		,su.SCHEDULE_SEQ
		,su.SCH_STATE_CD
		,su.SCH_MEANING
		,su.CONTRIBUTOR_SYSTEM_CD
		,su.APPT_SYNONYM_FREE
		,su.APPT_REASON_FREE
		,su.REQ_PRSNL_ID
		,su.CANDIDATE_ID
		,su.ACTIVE_IND
		,su.ACTIVE_STATUS_CD
		,su.ACTIVE_STATUS_PRSNL_ID
		,su.UPDT_DT_TM
		,su.UPDT_APPLCTX
		,su.UPDT_ID
		,su.UPDT_CNT
		,su.UPDT_TASK
		,su.RECUR_TYPE_FLAG
		,su.RECUR_PARENT_ID
		,su.RECUR_TEMPLATE_ID
		,su.RECUR_SEQ_NBR
		,su.EVENT_RECUR_ID
		,su.PROTOCOL_TYPE_FLAG
		,su.ESO_SEND_IND
		,su.OFFSET_BEG_UNITS
		,su.OFFSET_BEG_UNITS_CD
		,su.OFFSET_BEG_UNITS_MEANING
		,su.OFFSET_END_UNITS
		,su.OFFSET_END_UNITS_CD
		,su.OFFSET_END_UNITS_MEANING
		,su.OFFSET_EVENT_ID
		,su.OFFSET_FROM_CD
		,su.OFFSET_FROM_MEANING
		,su.OFFSET_TYPE_CD
		,su.OFFSET_TYPE_MEANING
		,su.PROTOCOL_PARENT_ID
		,su.PROTOCOL_SEQ_NBR
		,su.GRP_DESC
		,su.GRP_CAPACITY
		,su.GRP_NBR_SCHED
		,su.GRP_FLAG
		,su.GRP_SHARED_IND
		,su.GRP_CLOSED_IND
		,su.EVENT_CLASS_CD
		,su.SCH_EVENT_SEQ
		,su.ACTIVE_STATUS_DT_TM
		,su.BEG_EFFECTIVE_DT_TM
		,su.END_EFFECTIVE_DT_TM
		,su.GRP_BEG_DT_TM
		,su.GRP_END_DT_TM
		,su.NULL_DT_TM
		,su.REFER_DT_TM
		,su.VERSION_DT_TM
		,su.REFER_PRINTED_IND
		,su.ENTERPRISE_UPDATE_DT_TM
	from 
		#sch_event_update su
		left outer join cerner.SCH_EVENT s on s.SCH_EVENT_ID = su.SCH_EVENT_ID
	where
		s.SCH_EVENT_ID is null
	union all
	select
		su.SCH_EVENT_ID
		,su.APPT_TYPE_CD
		,su.APPT_SYNONYM_CD
		,su.OE_FORMAT_ID
		,su.ORDER_SENTENCE_ID
		,su.SCHEDULE_SEQ
		,su.SCH_STATE_CD
		,su.SCH_MEANING
		,su.CONTRIBUTOR_SYSTEM_CD
		,su.APPT_SYNONYM_FREE
		,su.APPT_REASON_FREE
		,su.REQ_PRSNL_ID
		,su.CANDIDATE_ID
		,su.ACTIVE_IND
		,su.ACTIVE_STATUS_CD
		,su.ACTIVE_STATUS_PRSNL_ID
		,su.UPDT_DT_TM
		,su.UPDT_APPLCTX
		,su.UPDT_ID
		,su.UPDT_CNT
		,su.UPDT_TASK
		,su.RECUR_TYPE_FLAG
		,su.RECUR_PARENT_ID
		,su.RECUR_TEMPLATE_ID
		,su.RECUR_SEQ_NBR
		,su.EVENT_RECUR_ID
		,su.PROTOCOL_TYPE_FLAG
		,su.ESO_SEND_IND
		,su.OFFSET_BEG_UNITS
		,su.OFFSET_BEG_UNITS_CD
		,su.OFFSET_BEG_UNITS_MEANING
		,su.OFFSET_END_UNITS
		,su.OFFSET_END_UNITS_CD
		,su.OFFSET_END_UNITS_MEANING
		,su.OFFSET_EVENT_ID
		,su.OFFSET_FROM_CD
		,su.OFFSET_FROM_MEANING
		,su.OFFSET_TYPE_CD
		,su.OFFSET_TYPE_MEANING
		,su.PROTOCOL_PARENT_ID
		,su.PROTOCOL_SEQ_NBR
		,su.GRP_DESC
		,su.GRP_CAPACITY
		,su.GRP_NBR_SCHED
		,su.GRP_FLAG
		,su.GRP_SHARED_IND
		,su.GRP_CLOSED_IND
		,su.EVENT_CLASS_CD
		,su.SCH_EVENT_SEQ
		,su.ACTIVE_STATUS_DT_TM
		,su.BEG_EFFECTIVE_DT_TM
		,su.END_EFFECTIVE_DT_TM
		,su.GRP_BEG_DT_TM
		,su.GRP_END_DT_TM
		,su.NULL_DT_TM
		,su.REFER_DT_TM
		,su.VERSION_DT_TM
		,su.REFER_PRINTED_IND
		,su.ENTERPRISE_UPDATE_DT_TM
	from 
		#sch_event_update su
		left outer join cerner.SCH_EVENT s on s.SCH_EVENT_ID = su.SCH_EVENT_ID and s.UPDT_CNT < su.UPDT_CNT
	where
		s.SCH_EVENT_ID is not null
END

BEGIN
	delete 
	from 
		cerner.SCH_EVENT
	where 
		SCH_EVENT_ID in (select SCH_EVENT_ID from #sch_event_update_filtered)
END

BEGIN
	insert into cerner.SCH_EVENT
	select * from #sch_event_update_filtered
END